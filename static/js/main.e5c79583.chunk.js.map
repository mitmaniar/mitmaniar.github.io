{"version":3,"sources":["components/Textbox/Textbox.tsx","components/Weather/Weather.tsx","utils.tsx","components/Header/Header.tsx","pages/Home/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Textbox","props","placeholder","onKeyPress","e","charCode","keyCode","onInput","target","value","className","type","Weather","hours","data","weatherImage","weather","icon","Date","dt","getHours","main","temp","toFixed","src","alt","Header","Home","useState","weatherData","setWeatherData","aggregateWeatherData","city","list","reduce","aggWeather","currentWeather","dateISO","dateTimeStamp","getFullYear","getMonth","getDate","toISOString","getDateISO","date","push","console","log","axios","get","then","response","name","Object","keys","map","weatherKey","j","weatherMain","toLocaleDateString","undefined","month","day","i","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5c79583.chunk.js","sourcesContent":["import React from 'react';\nimport './Textbox.css';\n\nfunction Textbox(props: any) {\n  const handleEnter = (e: any) => {\n    if ((e.charCode || e.keyCode) === 13) {\n      props.onInput(e.target.value);\n    }\n  }\n  return (\n    <input placeholder={props.placeholder} onKeyPress={handleEnter} className=\"Textbox\" type=\"text\" />\n  );\n}\n\nexport default Textbox;\n","import React from 'react';\nimport './Weather.css';\nimport imgCloud from \"../../assets/cloud.png\";\nimport imgGif from \"../../assets/rain.png\";\n\nimport { getMeridiemTime } from \"../../utils\";\n\nfunction Weather({ data }: {data: any}) {\n  let weatherImage = `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`;\n  // switch (data.weather[0].main) {\n  //   case 'Clouds':\n  //     weatherImage = imgCloud;\n  //     break;\n  //   case 'Rain':\n  //     weatherImage = imgGif;\n  //     break;\n  //   default:\n  //     weatherImage = imgCloud;\n  //     break;\n  // }\n  return (\n    <div className=\"weather-holder\">\n      <div className=\"time\">\n        { getMeridiemTime(new Date(data.dt*1000).getHours()) }\n      </div>\n      <div className=\"temp\">{ data.main.temp.toFixed() } &#x2103;</div>\n      <div className=\"weather\">\n        <img src={weatherImage} alt=\"\" />\n        \n      </div>\n      \n    </div>\n  );\n}\n\nexport default Weather;\n","export const getMeridiemTime = (hours: number) => {\n  return `${hours % 12} ${(hours/12)<1 ? 'AM' : 'PM'}`\n}\n\nexport const getDateISO = (dt: number) => {\n  const dateTimeStamp = new Date(dt*1000);\n  return new Date(\n    dateTimeStamp.getFullYear(),\n    dateTimeStamp.getMonth(),\n    dateTimeStamp.getDate()\n  ).toISOString()\n}","import React from 'react';\nimport './Header.css';\n\nfunction Header() {\n  return (\n    <header className=\"app-header\">\n      <div className=\"app-title\">\n        Weather\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useState } from 'react';\nimport axios from \"axios\";\nimport './Home.css';\n\nimport Textbox from \"../../components/Textbox/Textbox\";\nimport Weather from \"../../components/Weather/Weather\";\nimport Header from \"../../components/Header/Header\";\n\nimport { getDateISO } from \"../../utils\";\n\n// TODO: configure as part of env variable\nconst apiUrl = 'https://api.openweathermap.org/data/2.5/forecast?appid=978df16c9ea29182a3db4505fcea83b5&units=metric';\n\nfunction Home() {\n\n  const [ weatherData, setWeatherData ] = useState<any>(null);\n\n  const aggregateWeatherData = (data: any) => {\n    return {\n      city: data.city,\n      main: data.list.reduce((aggWeather: any, currentWeather: any) => {\n        const dateISO = getDateISO(currentWeather.dt);\n        aggWeather[dateISO] = aggWeather[dateISO] || { date: new Date(dateISO), list: [] }\n        aggWeather[dateISO].list.push(currentWeather)\n        return aggWeather;\n      }, {})\n    }\n  }\n\n  const onInput = (city: string) => {\n    console.log(city)\n    axios.get(`${apiUrl}&q=${city || ''}`).then(response => {\n      setWeatherData(aggregateWeatherData(response.data));\n      console.log(weatherData);\n    })\n  }\n\n  return (\n    <div className=\"home\">\n      <Header />\n      <div className=\"main-content\">\n        <div className=\"search\">\n          <Textbox onInput={onInput} placeholder='City' />\n        </div>\n        <div className=\"search-results\">\n          <div className=\"current-weather\">\n            <div className=\"weather-city\">\n              {weatherData && weatherData.city.name}\n            </div>\n            <div></div>\n          </div>\n          {\n            // TODO: Refine this section further into smaller components\n            weatherData && Object.keys(weatherData.main).map((weatherKey, j: number) => {\n              const weatherMain = weatherData.main[weatherKey];\n              return (\n                <div key={j} className=\"weather-collection\">\n                  <div className=\"weather-info\">\n                    <div className=\"weather-date\">\n                      {weatherMain.date.toLocaleDateString(undefined, { month: 'short', day: 'numeric' })}\n                    </div>\n                  </div>\n                  <div className=\"weather-list\">\n                    {\n                      weatherMain.list.map((weather: any, i: number) => (\n                        <Weather key={i} data={weather} />\n                      ))\n                    }\n                  </div>\n                </div>\n              )\n            })\n          }\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport Home from \"./pages/Home/Home\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}